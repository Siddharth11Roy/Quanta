# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12c1wLvoaatLlRxJ9xQY9SR1DwO_S3z_U
"""

import streamlit as st
import pandas as pd
import numpy as np
import joblib

# Load the trained model
model = joblib.load('linear_regression_model.pkl')

# Title of the app
st.title("Stock Price Prediction App")

# File uploader for the test set
uploaded_file = st.file_uploader("Upload your test.csv file", type=["csv"])

if uploaded_file is not None:
    # Read the test file
    test = pd.read_csv(uploaded_file)

    # Data preprocessing
    st.write("Preprocessing the data...")
    test['year'] = pd.to_datetime(test['Date']).dt.year
    test['day'] = pd.to_datetime(test['Date']).dt.day
    test['lag_0'] = test['Low'].shift(+1)
    test['lag_1'] = test['Low'].shift(+2)
    test['lag_2'] = test['Low'].shift(+3)
    test['lag_3'] = test['Low'].shift(+4)

    # Fill missing lag values with a default (mean or median from training data)
    default_value = 18068.349609  # Replace with your desired value
    test['lag_0'] = test['lag_0'].fillna(default_value)
    test['lag_1'] = test['lag_1'].fillna(default_value)
    test['lag_2'] = test['lag_2'].fillna(default_value)
    test['lag_3'] = test['lag_3'].fillna(default_value)

    # Align features with training set
    X_test = test[['year', 'Low', 'Close', 'High', 'lag_0', 'lag_1', 'lag_2', 'lag_3']]

    # Predict using the model
    try:
        y_pred = model.predict(X_test)
        st.success("Prediction successful!")
    except ValueError as e:
        st.error(f"Error during prediction: {e}")
        st.stop()

    # Create submission DataFrame
    submission = pd.DataFrame({
        'id': test['id'],  # Ensure `id` is in the uploaded test file
        'Open': y_pred
    })

    # Save submission file
    submission_file = "submission.csv"
    submission.to_csv(submission_file, index=False)

    # Provide download link for submission file
    st.download_button(
        label="Download Submission File",
        data=submission.to_csv(index=False),
        file_name=submission_file,
        mime="text/csv"
    )

    # Ask for user input (Stock ID)
    stock_id = st.text_input("Enter the Stock ID to get details:")

    if stock_id:
        # Find the stock ID in the submission file
        stock_data = submission[submission['id'] == int(stock_id)]

        if not stock_data.empty:
            open_price = stock_data['Open'].values[0]
            st.write(f"Open Price for Stock ID {stock_id}: {open_price}")

            # Get High, Low, and Close values from the test set
            high = test.loc[test['id'] == int(stock_id), 'High'].values[0]
            low = test.loc[test['id'] == int(stock_id), 'Low'].values[0]
            close = test.loc[test['id'] == int(stock_id), 'Close'].values[0]

            st.write(f"High: {high}")
            st.write(f"Low: {low}")
            st.write(f"Close: {close}")
        else:
            st.error("Stock ID not found in the submission file.")

